[{"C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\index.js":"1","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\App.js":"2","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\reportWebVitals.js":"3","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\login-component.js":"4","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\service\\auth-service.js":"5","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\register.js":"6","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\home.js":"7","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\faculty-component.js":"8","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\profile.js":"9","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\student-component.js":"10","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\admin-component.js":"11","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\service\\user-service.js":"12","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\service\\auth-header.js":"13"},{"size":590,"mtime":1607053672273,"results":"14","hashOfConfig":"15"},{"size":4927,"mtime":1607077111819,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":4202,"mtime":1607073026348,"results":"18","hashOfConfig":"15"},{"size":993,"mtime":1607063091126,"results":"19","hashOfConfig":"15"},{"size":5577,"mtime":1607062799041,"results":"20","hashOfConfig":"15"},{"size":1037,"mtime":1607076977486,"results":"21","hashOfConfig":"15"},{"size":992,"mtime":1607054498971,"results":"22","hashOfConfig":"15"},{"size":2086,"mtime":1607076701869,"results":"23","hashOfConfig":"15"},{"size":1172,"mtime":1607073632944,"results":"24","hashOfConfig":"15"},{"size":1040,"mtime":1607074420163,"results":"25","hashOfConfig":"15"},{"size":575,"mtime":1607073536710,"results":"26","hashOfConfig":"15"},{"size":252,"mtime":1607006932947,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1dq93w0",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\index.js",[],["57","58"],"C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\App.js",[],"C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\reportWebVitals.js",[],"C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\login-component.js",[],"C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\service\\auth-service.js",["59","60"],"\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth\";\r\n\r\nclass AuthService{\r\n    login(username, password){\r\n        return axios.post(API_URL + \"/signin\", {\r\n            username, password\r\n        })\r\n            .then(response => {\r\n                if(response.data.accessToken){\r\n\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                    console.log(JSON.stringify(response.data))\r\n                }\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    getCurrentUser(){\r\n        console.log(JSON.parse(localStorage.getItem('user')))\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    register(username, email, password){\r\n        return axios.post(API_URL + \"/signup\", {\r\n            username, email, password\r\n        });\r\n    }\r\n}\r\n\r\nexport default new AuthService();","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\register.js",["61"],"import React, {Component} from 'react';\r\nimport Form from \"react-validation/build/form\"\r\nimport Input from \"react-validation/build/input\"\r\nimport CheckButton from \"react-validation/build/button\"\r\nimport { isEmail } from \"validator\";\r\nimport AuthService from \"../service/auth-service\"\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not valid email\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vusername = value => {\r\n    if (value.length < 6 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The username must be between 3 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            successful: false,\r\n            message: \"\",\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n\r\n    handleRegister(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.register(\r\n                this.state.username,\r\n                this.state.email,\r\n                this.state.password,\r\n            ).then(\r\n                response => {\r\n                    this.setState({\r\n                        message: response.data.message,\r\n                        successful: true\r\n                    });\r\n                },\r\n                error => {\r\n                    const resMessage = (\r\n                        error.response && error.response.data &&\r\n                        error.response.data.message\r\n                    ) || error.message || error.toString();\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n                    <Form onSubmit={this.handleRegister} ref={c => {\r\n                        this.form = c;\r\n                    }}>\r\n                        {!this.state.successful && (\r\n                            <div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"username\">Username</label>\r\n                                    <Input type=\"text\" name=\"username\" value={this.state.username}\r\n                                           onChange={this.onChangeUsername} validations={[required, vusername]}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <Input type=\"text\" name=\"email\" value={this.state.email}\r\n                                    onChange={this.onChangeEmail} validations={[required, email]} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <Input type=\"password\" name=\"password\" value={this.state.password}\r\n                                    onChange={this.onChangePassword} validations={[required, vpassword]} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <button className=\"btn btn-primary btn-block\">\r\n                                        SignUp\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            )}\r\n\r\n                        {this.state.message && (\r\n                            <div className=\"form-group\">\r\n                                <div className = {\r\n                                    this.state.successful ? \"alert alert-success\" : \"alert alert-danger\"}\r\n                                     role=\"alert\" >{this.state.message}</div>\r\n                                }\r\n                            </div>\r\n                        )}\r\n                        <CheckButton style={{display: \"none\"}} ref={c => {this.checkBtn = c;}} />\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\home.js",[],"C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\faculty-component.js",[],"C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\profile.js",[],"C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\student-component.js",[],"C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\components\\admin-component.js",[],"C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\service\\user-service.js",[],"C:\\Users\\vivek\\Documents\\JAVA\\SpringBoot Tutorials Udemy\\login-authorization\\frontend-login-register-page\\src\\service\\auth-header.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":13},{"ruleId":"66","severity":1,"message":"70","line":2,"column":17,"nodeType":"68","messageId":"69","endLine":2,"endColumn":26},{"ruleId":"66","severity":1,"message":"71","line":105,"column":27,"nodeType":"68","messageId":"69","endLine":105,"endColumn":37},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'resMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]